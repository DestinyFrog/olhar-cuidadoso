// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  nome      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  senha     String   @db.VarChar(50)

  Alerta Alerta[]
}

model Cidade {
  id     Int      @id @default(autoincrement())
  nome   String   @db.VarChar(255)
  xpos   Float
  ypos   Float
  Bairro Bairro[]
}

model Alerta {
  id            Int    @id @default(autoincrement())
  nome          String @db.VarChar(255)
  xpos          Float
  ypos          Float
  aprovacoes    Int    @default(0)
  desaprovacoes Int    @default(0)

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int
}

model Bairro {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(255)
  xpos Float
  ypos Float

  cidade       Cidade         @relation(fields: [idCidade], references: [id])
  idCidade     Int
  PostoDeSaude PostoDeSaude[]
}

model PostoDeSaude {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(255)
  xpos Float
  ypos Float

  telefone String @db.VarChar(13)
  endereco String @db.VarChar(560)

  bairro        Bairro          @relation(fields: [idBairro], references: [id])
  idBairro      Int
  CasosDeDengue CasosDeDengue[]
}

model CasosDeDengue {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  casos      Int
  incidencia Float

  postoDeSaude   PostoDeSaude @relation(fields: [idPostoDeSaude], references: [id])
  idPostoDeSaude Int
}
